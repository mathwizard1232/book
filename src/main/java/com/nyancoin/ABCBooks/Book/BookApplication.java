package com.nyancoin.ABCBooks.Book;

import com.nyancoin.ABCBooks.Book.AuthorRepository;
import com.nyancoin.ABCBooks.Book.AuthorEntity;
import com.nyancoin.ABCBooks.Book.Author;

import com.nyancoin.ABCBooks.Book.Form; // Utility class with HTML form constants and helper methods.
import com.nyancoin.ABCBooks.Book.UIO; // I/O helper class

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.beans.factory.annotation.Autowired;

@SpringBootApplication
@RestController
public class BookApplication {
	@Autowired // This means to get the bean called userRepository
			   // Which is auto-generated by Spring, we will use it to handle the data
	private AuthorRepository authorRepository;
	@Autowired
	private UserRepository userRepository;

	@Autowired
	private Author authorService;

	@Autowired
	private Book bookService;

	private Form formFormer;
	private UIO UIO;

	public static void main(String[] args) {		
		SpringApplication.run(BookApplication.class, args);
	}

	public BookApplication()
	{
		formFormer = new Form();
		UIO = new UIO();
	}

	@RequestMapping("/")
	public String index() {
		return UIO.BasicPage("Greetings from ABC Books!");
	}
	
	@GetMapping("/hello")
	public String hello(@RequestParam(value = "name", defaultValue = "World") String name) {
		return String.format("Hello %s!", name);
	}
	
	@GetMapping(path="/all")
	public @ResponseBody Iterable<AuthorEntity> getAllAuthors() {
		return authorRepository.findAll();			
	}

	@RequestMapping("/addbook")
	public String addbook(@RequestParam(value = "author", defaultValue = "") String author,
						  @RequestParam(value = "title", defaultValue = "") String title) {
		String result = UIO.GetHeader("Add a Book");
		String spanColor = "#D6CCA9";

		String form = UIO.BasicBookInput();
		
		if (author.isEmpty() && title.isEmpty()) {
			result += form;
		} else if (!(author.isEmpty()) && !(title.isEmpty())) {
			Integer aid = authorService.LookupOrAdd(author);
			bookService.LookupOrAdd(aid, title);
			result += UIO.h3("Book Added:");
			result += UIO.strong("Author: ") + UIO.spanColor(author,spanColor);
			result += "<br><br>\n";
			result += UIO.strong("Title: ") + UIO.spanColor(title,spanColor);

			result += UIO.hr() + form;
		} else {
			if (author.isEmpty()) {
				result += "Please specify a name of an author as well as the title.<br>";
				result += UIO.BookInputWithTitleSet(title);		
			} else if (title.isEmpty()) {
				result += "Please specify the title of the work as well as its author.<br>";
				result += UIO.BookInputWithAuthorSet(author);
			} else {
				// I believe I have already covered all possible cases.
				result = "Unexpected case reached internally.<br>";
				result += form;
			}
		}

		result += UIO.GetFooter();

		return result;
	}

}
