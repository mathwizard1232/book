package com.nyancoin.ABCBooks.Book;

import com.nyancoin.ABCBooks.Book.AuthorRepository;
import com.nyancoin.ABCBooks.Book.AuthorEntity;
import com.nyancoin.ABCBooks.Book.Author;

import com.nyancoin.ABCBooks.Book.Form; // Utility class with HTML form constants and helper methods.

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.beans.factory.annotation.Autowired;

@SpringBootApplication
@RestController
public class BookApplication {
	@Autowired // This means to get the bean called userRepository
			   // Which is auto-generated by Spring, we will use it to handle the data
	private AuthorRepository authorRepository;
	@Autowired
	private UserRepository userRepository;

	@Autowired
	private Author authorService;

	@Autowired
	private Book bookService;

	private Form formFormer;

	public static void main(String[] args) {		
		SpringApplication.run(BookApplication.class, args);
	}

	public BookApplication()
	{
		formFormer = new Form();
	}

	@RequestMapping("/")
	public String index() {
		return "Greetings from ABC Books!";
	}
	
	@GetMapping("/hello")
	public String hello(@RequestParam(value = "name", defaultValue = "World") String name) {
		return String.format("Hello %s!", name);
	}
	
	@GetMapping(path="/all")
	public @ResponseBody Iterable<AuthorEntity> getAllAuthors() {
		return authorRepository.findAll();
	//public @ResponseBody Iterable<User> getAllUsers() {
	/*public String getAll() { // debugging version
		// This returns a JSON or XML with the users*/
		//return userRepository.findAll();
		/*String result;
		result = "";
		if (userRepository == null) {
			result += "userRepo null.<br>";
		}
		if (authorRepository == null) {
			result += "autorRepo null.<br>";
		}
		
		return result;*/
			
	}

	@RequestMapping("/addbook")
	public String addbook(@RequestParam(value = "author", defaultValue = "") String author,
						  @RequestParam(value = "title", defaultValue = "") String title) {
		String result = "";
		String form = formFormer.basic_book_input;
		
		if (author.isEmpty() && title.isEmpty()) {
			result = form;
		} else if (!(author.isEmpty()) && !(title.isEmpty())) {
			result = "Author: " + author + "; Title: " + title + "<br>";
			result += "*Beep boop* Database entry added! (Just a bit though.)";
			Integer aid = authorService.LookupOrAdd(author);
			result += "<br>Author id comes back as: " + aid + "<br>";
			result += "Book id comes back as: " + bookService.LookupOrAdd(aid, title);

			result = result + "<br><br>" + form;
		} else {
			result = "*Error* Only title or author but not both given.";
			result = result + "<br><br> Please retry. <br><br>" + form;

			if (author.isEmpty()) {
				result = "Please specify a name of an author as well as the title.<br>";
				result += formFormer.BookInputWithTitleSet(title);		
			} else if (title.isEmpty()) {
				result = "Please specify the title of the work as well as its author.<br>";
				result += formFormer.BookInputWithAuthorSet(author);
			} else {
				// I believe I have already covered all possible cases.
				result = "Unexpected case reached internally.<br>";
				result += form;
			}
		}

		return result;
	}

}
